#!/bin/bash

function update() {
  pacman -Syu --noconfirm &> $LOG_PKG_FILE
}

function install() {
  pacman -S --noconfirm --needed \
  vim curl sudo bash-completion htop nodejs npm yarn \
  grub efibootmgr dosfstools os-prober mtools \
  networkmanager \
  base-devel \
  xorg xorg-server \
  gdm gnome-calculator gnome-control-center gnome-tweak-tool gnome-keyring gnome-shell nautilus gnome-menus eog \
  xdg-utils xdg-user-dirs-gtk \
  ttf-roboto ttf-roboto-mono ttf-cascadia-code ttf-hack \
  filezilla vlc alacritty code firefox-developer-edition firefox-developer-edition-i18n-fr &> $LOG_PKG_FILE
}

function configure_locales() {
  # TimeZone
  ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime
  hwclock --systohc
  timedatectl set-ntp true

  # Lang and Encoding
  sed -i "s/#${INSTALL_LANG} ${INSTALL_ENC}/${INSTALL_LANG} ${INSTALL_ENC}/" /etc/locale.gen
  echo LANG=${INSTALL_LANG} > /etc/locale.conf
  locale-gen > $LOG_FILE

  # Keymaps for tty and Desktop
  echo 'KEYMAP=fr-latin1' > /etc/vconsole.conf
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.input-sources sources \"[('xkb', 'fr+azerty')]\""

  # Keymaps for X11
  cp ${DIR}/config/00-keyboard.conf /etc/X11/xorg.conf.d
  chmod 644 /etc/X11/xorg.conf.d/00-keyboard.conf

  # Locales $HOME directories for $USER_INSTALL
  su $USER_INSTALL -c "LANG=${INSTALL_LANG} xdg-user-dirs-update"
}

function configure_host() {
  echo $HOSTNAME_INSTALL > /etc/hostname
  echo "127.0.0.1    localhost" > /etc/hosts
  echo "::1          localhost" >> /etc/hosts
  echo "127.0.0.1    ${HOSTNAME_INSTALL}.localdomain ${HOSTNAME_INSTALL}" >> /etc/hosts
}

function configure_users() {
  # Create user and set passwords + sudoers
  echo root:$ROOT_PWD | chpasswd > $LOG_FILE
  useradd -m $USER_INSTALL > $LOG_FILE
  echo $USER_INSTALL:$USER_PWD | chpasswd > $LOG_FILE
  usermod -aG wheel,audio,video,optical,storage $USER_INSTALL > $LOG_FILE
  sed -i 's/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/' /etc/sudoers > $LOG_FILE
}

function configure_settings() {
  # User profile
  mkdir -p /home/${USER_INSTALL}/.config/Code\ -\ OSS/User
  cp -f ${DIR}/config/.bashrc /home/${USER_INSTALL}/.bashrc
  cp -f ${DIR}/config/.alacritty.yml /home/${USER_INSTALL}/.alacritty.yml
  cp -f ${DIR}/config/code-config.json /home/${USER_INSTALL}/.config/Code\ -\ OSS/User/settings.json
  chmod 644 /home/${USER_INSTALL}/.bashrc
  chmod 644 /home/${USER_INSTALL}/.alacritty.yml
  chmod 755 -R /home/${USER_INSTALL}/.config/Code\ -\ OSS
  chown ${USER_INSTALL}:${USER_INSTALL} /home/${USER_INSTALL}/.bashrc
  chown ${USER_INSTALL}:${USER_INSTALL} /home/${USER_INSTALL}/.alacritty.yml
  chown ${USER_INSTALL}:${USER_INSTALL} -R /home/${USER_INSTALL}/.config/Code\ -\ OSS

  # Create accounts service for user
  cp ${DIR}/config/user-account /var/lib/AccountsService/users/$USER_INSTALL > $LOG_FILE
  chmod 644 /var/lib/AccountsService/users/$USER_INSTALL > $LOG_FILE
}

function configure_boot() {
  mkdir /boot/EFI &> $LOG_FILE
  mount /dev/sda1 /boot/EFI &> $LOG_FILE
  grub-install --target=x86_64-efi --bootloader-id=grub_efi --recheck &> $LOG_FILE
  grub-mkconfig -o /boot/grub/grub.cfg &> $LOG_FILE
}

function enable_services() {
  systemctl enable NetworkManager &> $LOG_FILE
  systemctl enable gdm.service &> $LOG_FILE
}

function configure_desktop() {
  # Wallpapers
  cp -r ${DIR}/wallpapers /home/${USER_INSTALL}/Wallpapers
  chown -R ${USER_INSTALL}:${USER_INSTALL} /home/${USER_INSTALL}/Wallpapers

  # Fonts
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.background picture-uri 'file:///home/${USER_INSTALL}/Wallpapers/mountains.jpg'"
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.interface font-name 'Roboto 10'"
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.interface document-font-name 'Roboto 10'"
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.interface monospace-font-name 'Roboto Mono 10'"
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.wm.preferences titlebar-font 'Roboto 10'"

  # Window
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.wm.preferences button-layout 'appmenu:minimize,maximize,close'"

  # System
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.interface show-battery-percentage true"
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.interface clock-show-weekday true"

  # Login screen theme
  cp -f ${DIR}/config/gnome-shell-theme.gresource /usr/share/gnome-shell/gnome-shell-theme.gresource

  # Desktop theme
  cp -R ${DIR}/themes/Elegant /usr/share/themes/Elegant
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.interface gtk-theme 'Elegant'"

  # Icon theme
  mkdir -p /home/${USER_INSTALL}/.install/.icons
  unzip ${DIR}/themes/Tela-circle-icon-theme.zip -d /home/${USER_INSTALL}/.install/icons
  chmod 755 -R /home/${USER_INSTALL}/.install
  chown ${USER_INSTALL}:${USER_INSTALL} -R /home/${USER_INSTALL}/.install
  cd /home/${USER_INSTALL}/.install/icons
  su $USER_INSTALL -c "./install.sh blue" &> $LOG_FILE
  cd ${DIR}
  su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gsettings set org.gnome.desktop.interface icon-theme 'Tela-circle-blue-dark'"
}

function configure_extensions() {
  local FILES=${DIR}/extensions/*.zip
  for file in $FILES
  do
    UUID=$(unzip -c $file metadata.json | grep uuid | cut -d \" -f4)
    mkdir -p /home/${USER_INSTALL}/.local/share/gnome-shell/extensions/${UUID}
    unzip -q ${file} -d /home/${USER_INSTALL}/.local/share/gnome-shell/extensions/${UUID}/
    chown -R ${USER_INSTALL}:${USER_INSTALL} /home/${USER_INSTALL}/.local

    # TODO: uncomment when configuration is OK
    su $USER_INSTALL -c "sudo -u ${USER_INSTALL} dbus-launch gnome-extensions enable ${UUID}"
  done
}